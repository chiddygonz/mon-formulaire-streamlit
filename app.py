import streamlit as st
import gspread
from datetime import datetime, time, date # Importez time et date en plus de datetime

# --- Configuration Google Sheets (ne change pas par rapport √† ce qui a fonctionn√©) ---
try:
    gc = gspread.service_account_from_dict(st.secrets["gcp_service_account"])
    # Remplacez VOTRE_URL_GOOGLE_SHEET par l'URL de votre Google Sheet
    spreadsheet = gc.open_by_url("https://docs.google.com/spreadsheets/d/1BHB0xxPLZNyj42G8rwvo7wqLU5qfhJaUNJXMdSqvDxE/edit?gid=0#gid=0")
    worksheet = spreadsheet.worksheet("Sheet1") # Assurez-vous que c'est le bon nom de feuille
except Exception as e:
    st.error(f"Erreur de connexion √† Google Sheets : {e}")
    st.stop() # Arr√™te l'ex√©cution de l'application si la connexion √©choue

# --- Titre de l'application ---
st.title("üë∂ Suivi de B√©b√©")
st.markdown("---")

# --- S√©lecteur de type d'activit√© ---
type_activite = st.selectbox(
    "Quelle activit√© souhaitez-vous enregistrer ?",
    ["S√©lectionner...", "T√©t√©e / Biberon", "Couche", "Sommeil", "Autre"]
)

st.markdown("---")

# --- Formulaire principal avec sections conditionnelles ---
# Utilisation de st.form pour que tous les champs soient soumis en m√™me temps
with st.form("enregistrement_activite_bebe"):
    st.subheader("Informations de l'activit√©")

    # Champs communs √† toutes les activit√©s
    col1, col2 = st.columns(2)
    with col1:
        date_activite = st.date_input("Date de l'activit√©", value=date.today())
    with col2:
        heure_debut = st.time_input("Heure de d√©but", value=datetime.now().time())

    heure_fin = None
    details = ""
    notes = ""

    # Sections conditionnelles bas√©es sur le type d'activit√©
    if type_activite == "T√©t√©e / Biberon":
        st.markdown("##### D√©tails de l'alimentation")
        heure_fin = st.time_input("Heure de fin", value=datetime.now().time())
        type_alimentation = st.radio("Type d'alimentation", ["T√©t√©e", "Biberon"], horizontal=True)

        if type_alimentation == "T√©t√©e":
            cote_allaitement = st.radio("C√¥t√©", ["Gauche", "Droit", "Les deux"], horizontal=True)
            details = f"T√©t√©e - C√¥t√©: {cote_allaitement}"
        else: # Biberon
            quantite_biberon = st.number_input("Quantit√© (ml)", min_value=0, value=60, step=10)
            details = f"Biberon - Quantit√©: {quantite_biberon} ml"

    elif type_activite == "Couche":
        st.markdown("##### D√©tails de la couche")
        type_couche_options = st.multiselect(
            "Type de couche",
            ["Pipi", "Caca"],
            default=["Pipi"] # Valeur par d√©faut
        )
        details = ", ".join(type_couche_options)
        notes = st.text_area("Notes (couleur, consistance...)", "")

    elif type_activite == "Sommeil":
        st.markdown("##### D√©tails du sommeil")
        heure_fin = st.time_input("Heure de fin du sommeil", value=datetime.now().time())
        type_sommeil = st.radio("Type de sommeil", ["Sieste", "Nuit"], horizontal=True)
        details = f"Type: {type_sommeil}"
        notes = st.text_area("Notes (agitation, endormissement...)", "")

    elif type_activite == "Autre":
        st.markdown("##### D√©tails de l'activit√© 'Autre'")
        details = st.text_input("Br√®ve description de l'activit√©", "")
        notes = st.text_area("Notes suppl√©mentaires", "")
        # Optionnel: si 'Autre' a une dur√©e
        heure_fin = st.time_input("Heure de fin (optionnel)", value=datetime.now().time())


    # Bouton de soumission du formulaire
    submitted = st.form_submit_button("üë∂ Enregistrer l'activit√©")

    if submitted:
        if type_activite == "S√©lectionner...":
            st.warning("Veuillez s√©lectionner un type d'activit√©.")
        else:
            try:
                # Pr√©parer les donn√©es √† envoyer
                # Convertir les objets date/time en cha√Ænes pour Google Sheets
                row_data = [
                    str(date_activite),
                    type_activite,
                    str(heure_debut),
                    str(heure_fin) if heure_fin else "", # G√©rer le cas o√π heure_fin est None
                    details,
                    notes
                ]
                
                # √âcrire la nouvelle ligne dans Google Sheets
                worksheet.append_row(row_data)
                st.success("‚úÖ Activit√© enregistr√©e avec succ√®s dans Google Sheets !")
                st.balloons() # Petite animation de c√©l√©bration

            except Exception as e:
                st.error(f"‚ùå Erreur lors de l'enregistrement dans Google Sheets : {e}")

st.markdown("---")

# --- Affichage des derni√®res activit√©s (pour v√©rifier que √ßa marche) ---
st.subheader("Historique des derni√®res activit√©s")
try:
    # R√©cup√©rer toutes les donn√©es de la feuille
    all_records = worksheet.get_all_records()
    if all_records:
        # Afficher les 10 derni√®res activit√©s dans un tableau
        # Les records sont des dictionnaires, nous pouvons les convertir en DataFrame si besoin
        import pandas as pd
        df = pd.DataFrame(all_records)
        # Inverser l'ordre pour avoir les plus r√©centes en haut
        st.dataframe(df.tail(10).sort_values(by="Date", ascending=False).reset_index(drop=True))
    else:
        st.info("Aucune activit√© enregistr√©e pour le moment.")
except Exception as e:
    st.error(f"Erreur lors de la r√©cup√©ration des donn√©es : {e}")